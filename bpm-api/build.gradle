buildscript {
    repositories {
        maven { url = 'https://maven.minecraftforge.net' }
        maven { url "https://plugins.gradle.org/m2/" }
        mavenCentral()
    }
    dependencies {
        classpath group: 'net.minecraftforge.gradle', name: 'ForgeGradle', version: '5.1.+', changing: true
        // Make sure this version matches the one included in Kotlin for Forge
        classpath 'org.jetbrains.kotlin:kotlin-gradle-plugin:1.6.10'
        // OPTIONAL Gradle plugin for Kotlin Serialization
        classpath 'org.jetbrains.kotlin:kotlin-serialization:1.6.10'
        classpath "gradle.plugin.com.github.johnrengelman:shadow:7.1.2"

    }
}
apply plugin: 'com.github.johnrengelman.shadow'

apply plugin: 'net.minecraftforge.gradle'
apply plugin: 'kotlin'
apply plugin: 'kotlinx-serialization'

apply from: 'https://raw.githubusercontent.com/thedarkcolour/KotlinForForge/site/thedarkcolour/kotlinforforge/gradle/kff-3.1.0.gradle'

version = '1.0.0'
group = 'com.github.bpmapi'
archivesBaseName = 'bpmapi'

java.toolchain.languageVersion = JavaLanguageVersion.of(17)
ext {
    imguiVersion = '1.86.4'
}
minecraft {
    mappings channel: 'official', version: '1.18.2'
    runs {
        client {
            workingDirectory project.file('run')

            property 'forge.logging.markers', 'SCAN,LOADING,CORE'
            property 'forge.logging.console.level', 'debug'

            mods {
                bpmapi {
                    source sourceSets.main
                }
            }
        }

        server {
            workingDirectory project.file('run/server')

            property 'forge.logging.markers', 'SCAN,LOADING,CORE'
            property 'forge.logging.console.level', 'debug'

            mods {
                bpmapi {
                    source sourceSets.main
                }
            }
        }

        data {
            workingDirectory project.file('run')

            property 'forge.logging.markers', 'SCAN,LOADING,CORE'
            property 'forge.logging.console.level', 'debug'

            args '--mod', 'bpmapi', '--all', '--output', file('src/generated/resources/'), '--existing', file('src/main/resources')

            mods {
                bpmapi {
                    source sourceSets.main
                }
            }
        }
    }
}

// Include assets and data from data generators
sourceSets.main.resources { srcDirs 'src/generated/resources/' }

configurations {
    embed
    implementation.extendsFrom(embed)
}

repositories {
    mavenCentral()
}

dependencies {
    // Use the latest version of Minecraft Forge
    minecraft 'net.minecraftforge:forge:1.18.2-40.0.4'
}

compileKotlin {
    kotlinOptions.jvmTarget = "17"
}

jar {
    destinationDirectory.set(file("${rootProject.rootDir}/run/mods"))
    manifest {
        attributes([
                'Specification-Title'     : "bpmapi",
                'Specification-Vendor'    : "bpmapisareus",
                'Specification-Version'   : "1", // We are version 1 of ourselves
                'Implementation-Title'    : project.name,
                'Implementation-Version'  : project.version,
                'Implementation-Vendor'   : "bpmapisareus",
                'Implementation-Timestamp': new Date().format("yyyy-MM-dd'T'HH:mm:ssZ")
        ])
    }
}


jar.finalizedBy("reobfJar")

