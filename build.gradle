buildscript {
    repositories {
        maven { url = 'https://maven.minecraftforge.net' }
        mavenCentral()
    }
    dependencies {
        classpath group: 'net.minecraftforge.gradle', name: 'ForgeGradle', version: '5.1.+', changing: true
        // Make sure this version matches the one included in Kotlin for Forge
        classpath 'org.jetbrains.kotlin:kotlin-gradle-plugin:1.6.10'
        // OPTIONAL Gradle plugin for Kotlin Serialization
        classpath 'org.jetbrains.kotlin:kotlin-serialization:1.6.10'
    }
}
apply plugin: 'net.minecraftforge.gradle'
apply plugin: 'kotlin'
apply plugin: 'java'
apply plugin: 'kotlinx-serialization'

apply from: 'https://raw.githubusercontent.com/thedarkcolour/KotlinForForge/site/thedarkcolour/kotlinforforge/gradle/kff-3.1.0.gradle'

version = '1.0.0'
group = 'com.github.bpmmod'
archivesBaseName = 'bpmmod'

java.toolchain.languageVersion = JavaLanguageVersion.of(17)

ext {
    imguiVersion = '1.86.4'
}


sourceSets {
    main {
        kotlin.srcDirs('src/main/kotlin', 'src/api/kotlin')
    }
}

minecraft {
    mappings channel: 'official', version: '1.18.2'

    runs {
        client {
            workingDirectory project.file('run')

            property 'forge.logging.markers', 'SCAN,LOADING,CORE'
            property 'forge.logging.console.level', 'debug'

            mods {
                bpmmod {
                    source sourceSets.main
//                    sources(sourceSets.main, sourceSets.api)
                }
            }
        }

        server {
            workingDirectory project.file('run/server')

            property 'forge.logging.markers', 'SCAN,LOADING,CORE'
            property 'forge.logging.console.level', 'debug'

            mods {
                bpmmod {
//                    sources(sourceSets.main, sourceSets.api)
                    source sourceSets.main
                }

            }
        }

        data {
            workingDirectory project.file('run')

            property 'forge.logging.markers', 'SCAN,LOADING,CORE'
            property 'forge.logging.console.level', 'debug'

            args '--mod', 'bpmmod', '--all', '--output', file('src/generated/resources/'), '--existing', file('src/main/resources')

            mods {
                bpmmod {
//                    sources(sourceSets.main, sourceSets.api)
                    source sourceSets.main

                }

            }
        }
    }
}

repositories {
    mavenCentral()
}

// Include assets and data from data generators
//sourceSets.main.resources { srcDirs 'src/generated/resources/' }


dependencies {
    // Use the latest version of Minecraft Forge
    minecraft 'net.minecraftforge:forge:1.18.2-40.0.4'
//    implementation(project("bpm-api"))
    library("io.github.spair:imgui-java-binding:$imguiVersion") {
        transitive = false
    }
    library("io.github.spair:imgui-java-lwjgl3:$imguiVersion") {
        transitive = false
    }
    library("io.github.spair:imgui-java-natives-windows:$imguiVersion") {
        transitive = false
    }

    library("io.github.spair:imgui-java-natives-macos:$imguiVersion") {
        transitive = false
    }
    library("io.github.spair:imgui-java-natives-linux:$imguiVersion") {
        transitive = false
    }
    implementation("io.github.spair:imgui-java-binding:$imguiVersion")
    implementation("io.github.spair:imgui-java-lwjgl3:$imguiVersion")
    implementation("io.github.spair:imgui-java-natives-windows:$imguiVersion")
    implementation("io.github.spair:imgui-java-natives-macos:$imguiVersion")
    implementation("io.github.spair:imgui-java-natives-linux:$imguiVersion")
}


task output(type: Copy) {
    dependsOn "reobfJar"
    from "build/reobfJar"
    into 'builds'
    rename { String fileName ->
        fileName.replace("output", "bpm-${project.version}")
    }
}

compileKotlin {
    kotlinOptions.jvmTarget = "17"
}

jar {
    configurations.library.each { dep ->
        if (dep.name.contains("imgui"))
            from(project.zipTree(dep)) {
                exclude 'META-INF', 'META-INF/**'
                // you may exclude other things here if you want, or maybe copy the META-INF
            }
    }
    manifest {
        attributes([
                'Specification-Title'     : "bpmmod",
                'Specification-Vendor'    : "bpmmodsareus",
                'Specification-Version'   : "1", // We are version 1 of ourselves
                'Implementation-Title'    : project.name,
                'Implementation-Version'  : project.version,
                'Implementation-Vendor'   : "bpmmodsareus",
                'Implementation-Timestamp': new Date().format("yyyy-MM-dd'T'HH:mm:ssZ"),
        ])
    }
}


jar.finalizedBy('reobfJar')
